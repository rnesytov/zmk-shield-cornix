/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&sl {
    ignore-modifiers;

    /delete-property/ quick-release;
};

&sk { quick-release; };

/ {
    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&lt 1 TAB         &kp Q  &kp W   &kp E         &kp R         &kp T                                            &kp Y        &kp U          &kp I         &kp O       &kp P          &kp LBKT
&mt LCTRL ESCAPE  &kp A  &kp S   &kp D         &kp F         &kp G                                            &kp H        &kp J          &kp K         &kp L       &kp SEMICOLON  &kp SQT
&sk LSHFT         &kp Z  &kp X   &kp C         &kp V         &kp B        &kp C_PLAY_PAUSE  &kp C_PLAY_PAUSE  &kp N        &kp M          &kp COMMA     &kp PERIOD  &kp SLASH      &sk RIGHT_SHIFT
&kp LCTRL         &mo 3  &tog 3  &kp LEFT_ALT  &kp LEFT_GUI  &lt 2 SPACE                                      &lt 1 ENTER  &kp BACKSPACE  &lt 2 DELETE  &kp HOME    &kp END        &kp RCTRL
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp C_NEXT C_PREV>;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                  &kp N6    &kp N7    &kp N8  &kp N9     &kp N0         &kp RBKT
&kp LCTRL  &trans  &trans  &trans  &trans  &trans                  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp MINUS      &kp EQUAL
&trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans  &trans     &kp BACKSLASH  &trans
&trans     &trans  &trans  &trans  &trans  &trans                  &trans    &trans    &trans  &trans     &trans         &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                  &kp CARET       &kp AMPERSAND  &kp ASTRK         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&trans     &kp F1           &kp F2       &kp F3    &kp F4      &kp F5                       &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp NON_US_BACKSLASH   &trans
&trans     &kp F6           &kp F7       &kp F8    &kp F9      &kp F10      &trans  &trans  &kp UNDERSCORE  &kp PLUS       &kp LEFT_BRACE    &kp RIGHT_BRACE       &kp PIPE               &trans
&trans     &trans           &trans       &trans    &trans      &trans                       &trans          &trans         &trans            &trans                &trans                 &trans
            >;
        };

        adjust_layer {
            bindings = <
&trans  &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &msc SCRL_UP    &trans                            &trans          &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans        &trans        &kp PRINTSCREEN
&trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN  &trans                            &kp LS(C_PREV)  &kp C_VOL_DN          &kp C_VOL_UP          &kp C_NEXT    &trans        &trans
&trans  &trans          &trans          &trans           &trans          &trans    &studio_unlock  &trans  &bt BT_SEL 0    &bt BT_SEL 1          &bt BT_SEL 2          &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans  &trans          &trans          &trans           &mkp MB2        &mkp MB1                          &trans          &kp C_PP              &trans                &trans        &trans        &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        symbols {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
